{"version":3,"sources":["reportWebVitals.ts","components/layout/LayoutFooter.tsx","components/layout/LayoutHeader.tsx","components/layout/Layout.tsx","App.tsx","pages/Home.tsx","pages/BlogPost/BlogPost.tsx","pages/BlogPost/BlogPosts.tsx","pages/Projects.tsx","pages/Contact.tsx","components/PageRouter.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LayoutFooter","className","to","LayoutHeader","Layout","children","App","Home","BlogPost","useState","loading","failed","post","blogPost","setBlogPost","params","useParams","useEffect","fetch","process","postId","response","text","data","sanitizedPostHtml","DOMPurify","sanitize","marked","parse","catch","error","console","log","dangerouslySetInnerHTML","__html","style","overflowWrap","BlogPosts","unformattedPosts","blogPosts","setBlogPosts","location","useLocation","json","newBlogPosts","map","id","title","author","date_created","date_last_updated","Projects","Contact","PageRouter","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ef64f59.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Link } from 'react-router-dom';\r\nimport './LayoutFooter.css';\r\n\r\nexport default function LayoutFooter() {\r\n    return (\r\n        <div>\r\n            <div className='footer-spacer'/>\r\n            <div className='footer'>\r\n                <p><i>Sam Foucart - 2022</i></p>\r\n                <Link to='/'>Back to Home</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport './LayoutHeader.css';\r\n\r\nexport default function LayoutHeader() {\r\n    return (\r\n        <div>\r\n            <nav className=\"top-nav\">\r\n                <Link to={\"/\"}>Home</Link>\r\n                <Link to={\"/posts\"}>Blog</Link>\r\n                <Link to={\"/projects\"}>Projects</Link>\r\n                <Link to={\"/contact\"}>Contact</Link>\r\n            </nav>\r\n            <div className=\"top-nav-spacer\"/>\r\n        </div>\r\n    );\r\n}","import LayoutFooter from \"./LayoutFooter\";\r\nimport LayoutHeader from \"./LayoutHeader\";\r\nimport './Layout.css';\r\n\r\ninterface AppProps {\r\n    children?: JSX.Element;\r\n};\r\n\r\nexport default function Layout({ children }: AppProps): JSX.Element {\r\n    return (\r\n        <div className=\"layout\">\r\n            <LayoutHeader/>\r\n            {children}\r\n            <LayoutFooter/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './components/layout/Layout';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Outlet />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <p>Home</p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { marked } from 'marked';\r\nimport DOMPurify from 'dompurify';\r\nimport './BlogPost.css';\r\n\r\ninterface BlogPostState {\r\n    loading: boolean;\r\n    failed: boolean;\r\n    post: string;\r\n}\r\n\r\nexport default function BlogPost() {\r\n    const [blogPost, setBlogPost] = useState<BlogPostState>({loading: true, failed: false, post: \"\"});\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const postResponse = fetch(process.env.PUBLIC_URL + `/posts-raw/${params.postId}.md`);\r\n        // const postResponse = fetch(`/posts-raw/${params.postId}.md`);\r\n        postResponse.then((response) => {\r\n            return response.text();\r\n        })\r\n        .then((data) => {\r\n            const sanitizedPostHtml: string = DOMPurify.sanitize(marked.parse(data));\r\n            setBlogPost({loading: false, failed: false, post: sanitizedPostHtml});\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setBlogPost({loading: false, failed: true, post: \"\"});\r\n        });\r\n    }, [params]);\r\n\r\n    function loading() {\r\n        if (blogPost.loading === true) {\r\n            return (\r\n                <div>\r\n                    <p>Loading</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (blogPost.loading === false && blogPost.failed === true) {\r\n            return (\r\n                <div>\r\n                    <p>Failed to load {params.postId}</p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div \r\n                dangerouslySetInnerHTML={{ __html: blogPost.post}}\r\n                style={{overflowWrap: 'break-word'}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-container\">\r\n            {loading()}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport './BlogPosts.css';\r\n\r\ninterface IBlogPostMetadata {\r\n    id: number,\r\n    title: string,\r\n    date_created: string,\r\n    date_last_updated: string,\r\n    author: string,\r\n    fileName: string,\r\n}\r\n\r\nexport default function BlogPosts() {\r\n    const [blogPosts, setBlogPosts] = useState<IBlogPostMetadata[] | null>(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const blogPostListResponse = fetch(process.env.PUBLIC_URL + '/posts-raw/posts.json');\r\n        // const blogPostListResponse = fetch('/posts-raw/posts.json');\r\n        blogPostListResponse.then((response: Response) => {\r\n            return response.json();\r\n        })\r\n        .then((data: IBlogPostMetadata[]) => {\r\n            const newBlogPosts: IBlogPostMetadata[] = data.map((blogPost): IBlogPostMetadata => {\r\n                return blogPost;\r\n            });\r\n            setBlogPosts(newBlogPosts);\r\n        });\r\n\r\n        return (() => {\r\n            setBlogPosts(null);\r\n        });\r\n\r\n    }, [location]);\r\n\r\n    function formatBlogPosts(unformattedPosts: IBlogPostMetadata[] | null) {\r\n        if (unformattedPosts == null) {\r\n            return (\r\n                <div className=\"post-list-container\"><p>Loading</p></div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"post-list-container\">\r\n                    <div className=\"individual-post-metadata\">\r\n                        {unformattedPosts.map((post: IBlogPostMetadata) => {\r\n                            return (\r\n                                <Link to={`/posts/${post.id}`} key={post.id}>\r\n                                    <h2>{post.title}</h2>\r\n                                    <div className=\"individual-post-metadata-inline\">\r\n                                        <p>Author: <i>{post.author}</i></p>\r\n                                        <p>Date Created: <i>{post.date_created}</i></p>\r\n                                        <p>Date Last Updated: <i>{post.date_last_updated}</i></p>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-list-container\">\r\n            {formatBlogPosts(blogPosts)}\r\n            {/* <ul>\r\n                {blogPosts != null ? blogPosts.map((blogPost: IBlogPostMetadata) => {\r\n                    return <li key={blogPost.id}><Link to={`/posts/${blogPost.id}`} key={blogPost.id}>{blogPost.title}</Link></li>\r\n                }) : <li>loading</li>}\r\n            </ul> */}\r\n            {/* <Outlet/> */}\r\n        </div>\r\n    )\r\n}","export default function Projects() {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li>Project 1</li>\r\n                <li>Project 2</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","export default function Contact() {\r\n    return (\r\n        <div>\r\n            <p>Contact page</p>\r\n        </div>\r\n    )\r\n}","import { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Home from \"../pages/Home\";\r\nimport BlogPost from \"../pages/BlogPost/BlogPost\";\r\nimport BlogPosts from \"../pages/BlogPost/BlogPosts\";\r\nimport Projects from \"../pages/Projects\";\r\nimport Contact from \"../pages/Contact\";\r\n\r\nexport default function PageRouter() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<App />}>\r\n                        <Route index element={<Home />} />\r\n                        <Route path=\"posts\" element={<BlogPosts />} />\r\n                        <Route path=\"posts/:postId\" element={<BlogPost />} />\r\n                        <Route path=\"projects\" element={<Projects />} />\r\n                        <Route path=\"contact\" element={<Contact />} />\r\n                    </Route>\r\n                </Routes>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport PageRouter from './components/PageRouter';\r\n\r\nReactDOM.render(\r\n  <PageRouter/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}