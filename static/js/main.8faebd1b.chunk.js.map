{"version":3,"sources":["reportWebVitals.ts","components/layout/LayoutFooter.tsx","components/layout/LayoutHeader.tsx","components/layout/Layout.tsx","App.tsx","pages/Home.tsx","pages/BlogPost.tsx","pages/BlogPosts.tsx","components/PageRouter.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LayoutFooter","LayoutHeader","className","to","Layout","children","App","Home","BlogPost","useState","blogPost","setBlogPost","params","useParams","useEffect","fetch","process","postId","response","text","data","BlogPosts","blogPosts","setBlogPosts","location","useLocation","json","newBlogPosts","map","id","title","PageRouter","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"wMAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6BCTC,SAASQ,IACpB,OACI,8BACI,yC,MCAG,SAASC,IACpB,OACI,gCACI,sBAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAAMC,GAAI,IAAV,kBACA,cAAC,IAAD,CAAMA,GAAI,SAAV,kBACA,cAAC,IAAD,CAAMA,GAAI,IAAV,mBACA,cAAC,IAAD,CAAMA,GAAI,IAAV,wBAEJ,qBAAKD,UAAU,sBCLZ,SAASE,EAAT,GAAsD,IAApCC,EAAmC,EAAnCA,SAC7B,OACI,gCACI,cAAC,EAAD,IACCA,EACD,cAACL,EAAD,OCIGM,MAVf,WACE,OACE,8BACE,cAACF,EAAD,UACE,cAAC,IAAD,SCRO,SAASG,IACpB,OACI,8BACI,uC,WCIG,SAASC,IAAY,IAAD,EACCC,mBAAwB,MADzB,mBACxBC,EADwB,KACdC,EADc,KAEzBC,EAASC,cAaf,OAXAC,qBAAU,WACeC,MAAMC,aAAA,qBAAuCJ,EAAOK,OAA9C,QAEdvB,MAAK,SAACwB,GACf,OAAOA,EAASC,UAEnBzB,MAAK,SAAC0B,GACHT,EAAYS,QAEjB,CAACR,IAGA,8BACiB,MAAZF,EAAmB,4BAAIA,IAAgB,0CCdrC,SAASW,IAAa,IAAD,EACEZ,mBAAqC,MADvC,mBACzBa,EADyB,KACdC,EADc,KAE1BC,EAAWC,cAqBjB,OAnBAX,qBAAU,WAaN,OAZ6BC,MAAMC,mCAEdtB,MAAK,SAACwB,GACvB,OAAOA,EAASQ,UAEnBhC,MAAK,SAAC0B,GACH,IAAMO,EAAoCP,EAAKQ,KAAI,SAAClB,GAChD,OAAOA,KAEXa,EAAaI,MAGT,WACJJ,EAAa,SAGlB,CAACC,IAGA,gCACI,6BACkB,MAAbF,EAAoBA,EAAUM,KAAI,SAAClB,GAChC,OAAO,6BAAsB,cAAC,IAAD,CAAMP,GAAE,iBAAYO,EAASmB,IAA7B,SAAsDnB,EAASoB,OAAvBpB,EAASmB,KAA9DnB,EAASmB,OACxB,2CAET,cAAC,IAAD,OCpCG,SAASE,IACpB,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACI,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC1B,EAAD,MACtB,cAAC,IAAD,CAAOyB,KAAK,QAAQC,QAAS,cAACZ,EAAD,MAC7B,cAAC,IAAD,CAAOW,KAAK,gBAAgBC,QAAS,cAACzB,EAAD,eCR7D2B,IAASC,OACP,cAACL,EAAD,IAEAM,SAASC,eAAe,SAM1B/C,M","file":"static/js/main.8faebd1b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default function LayoutFooter() {\r\n    return (\r\n        <div>\r\n            <p>footer</p>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\nimport './LayoutHeader.css';\r\n\r\nexport default function LayoutHeader() {\r\n    return (\r\n        <div>\r\n            <nav className=\"top-nav\">\r\n                <Link to={\"/\"}>Home</Link>\r\n                <Link to={\"/posts\"}>Blog</Link>\r\n                <Link to={\"/\"}>About</Link>\r\n                <Link to={\"/\"}>Contact</Link>\r\n            </nav>\r\n            <div className=\"top-nav-spacer\"/>\r\n        </div>\r\n    );\r\n}","import LayoutFooter from \"./LayoutFooter\";\r\nimport LayoutHeader from \"./LayoutHeader\";\r\n\r\ninterface AppProps {\r\n    children?: JSX.Element;\r\n};\r\n\r\nexport default function Layout({ children }: AppProps): JSX.Element {\r\n    return (\r\n        <div>\r\n            <LayoutHeader/>\r\n            {children}\r\n            <LayoutFooter/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './components/layout/Layout';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Outlet />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <p>Home</p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// interface BlogPostState {\r\n//     loading: boolean;\r\n//     failed: boolean;\r\n//     post: string;\r\n// }\r\n\r\nexport default function BlogPost() {\r\n    const [blogPost, setBlogPost] = useState<string | null>(null);\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const postResponse = fetch(process.env.PUBLIC_URL + `/posts-raw/${params.postId}.md`);\r\n        // const postResponse = fetch(`/posts-raw/${params.postId}.md`);\r\n        postResponse.then((response) => {\r\n            return response.text();\r\n        })\r\n        .then((data) => {\r\n            setBlogPost(data);\r\n        });\r\n    }, [params]);\r\n\r\n    return (\r\n        <div>\r\n            {blogPost != null ? <p>{blogPost}</p> : <p>loading</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default class BlogPost extends React.Component<{filename?: string}, BlogPostState> {\r\n\r\n//     constructor(filename?: string) {\r\n//         super({filename});\r\n//         this.state = {loading: true, failed: false, post: \"\"};\r\n//     }\r\n    \r\n//     async componentDidMount() {\r\n//         let postText: string | undefined = await this.fetchBlogPost();\r\n//         this.setState({loading: false, failed: false, post: postText ?? ''});\r\n//         console.log(postText);\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             typeof(this.state.post) === undefined?\r\n//                 <div>\r\n//                     undefined\r\n//                 </div>\r\n//             :\r\n//                 <div>\r\n//                     <p>\r\n//                         {this.state.loading? \"still loading\": \"done loading\"}\r\n//                     </p>\r\n//                     <div>\r\n//                         {/* It is safe to dangerouslySetInnerHTML here because the state\r\n//                          can only be defined by a file in the self-maintained json in the repo\r\n//                          Users cannot upload their own posts. I am the only one able to add posts to the git repo.\r\n//                          Otherwise, this would be vulnerable to an injection attack */}\r\n//                         <div dangerouslySetInnerHTML={{__html: this.state.post === undefined? \"\": this.state.post}}>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//         );\r\n//     }\r\n\r\n//     async fetchBlogPost(): Promise<string | undefined> {\r\n//         let response: Response = await fetch(`/posts-raw/${\"creating-portfolio-website-raw.html\"}`);\r\n//         return await response.text();\r\n//     }\r\n// }\r\n\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\n\r\ninterface IBlogPostMetadata {\r\n    id: number,\r\n    title: string,\r\n    date_created: string,\r\n    date_last_updated: string,\r\n    author: string,\r\n    fileName: string,\r\n}\r\n\r\nexport default function BlogPosts() {\r\n    const [blogPosts, setBlogPosts] = useState<IBlogPostMetadata[] | null>(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const blogPostListResponse = fetch(process.env.PUBLIC_URL + '/posts-raw/posts.json');\r\n        // const blogPostListResponse = fetch('/posts-raw/posts.json');\r\n        blogPostListResponse.then((response: Response) => {\r\n            return response.json();\r\n        })\r\n        .then((data: IBlogPostMetadata[]) => {\r\n            const newBlogPosts: IBlogPostMetadata[] = data.map((blogPost): IBlogPostMetadata => {\r\n                return blogPost;\r\n            });\r\n            setBlogPosts(newBlogPosts);\r\n        });\r\n\r\n        return (() => {\r\n            setBlogPosts(null);\r\n        });\r\n\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {blogPosts != null ? blogPosts.map((blogPost: IBlogPostMetadata) => {\r\n                    return <li key={blogPost.id}><Link to={`/posts/${blogPost.id}`} key={blogPost.id}>{blogPost.title}</Link></li>\r\n                }) : <li>loading</li>}\r\n            </ul>\r\n            <Outlet/>\r\n        </div>\r\n    )\r\n}","import { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Home from \"../pages/Home\";\r\nimport BlogPost from \"../pages/BlogPost\";\r\nimport BlogPosts from \"../pages/BlogPosts\";\r\n\r\nexport default function PageRouter() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<App />}>\r\n                        <Route index element={<Home />} />\r\n                        <Route path=\"posts\" element={<BlogPosts />} />\r\n                        <Route path=\"posts/:postId\" element={<BlogPost />} />\r\n                    </Route>\r\n                </Routes>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport PageRouter from './components/PageRouter';\r\n\r\nReactDOM.render(\r\n  <PageRouter/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}