{"version":3,"sources":["reportWebVitals.ts","components/layout/LayoutFooter.tsx","components/layout/LayoutHeader.tsx","components/layout/Layout.tsx","App.tsx","pages/Home.tsx","pages/BlogPost/BlogPost.tsx","pages/BlogPost/BlogPosts.tsx","pages/Projects/Projects.tsx","pages/Contact.tsx","components/PageRouter.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LayoutFooter","_jsxs","children","_jsx","className","Link","to","LayoutHeader","Layout","App","Outlet","Home","src","process","alt","width","height","style","objectFit","flexShrink","BlogPost","_useState","useState","loading","failed","post","_useState2","_slicedToArray","blogPost","setBlogPost","params","useParams","useEffect","marked","setOptions","highlight","code","lang","language","hljs","getLanguage","value","langPrefix","fetch","concat","postId","response","text","data","sanitizedPostHtml","DOMPurify","sanitize","parse","catch","error","console","log","dangerouslySetInnerHTML","__html","overflowWrap","BlogPosts","unformattedPosts","blogPosts","setBlogPosts","location","useLocation","json","newBlogPosts","map","id","title","author","date_created","date_last_updated","projectDatabase","description","image","url","outside_url","Projects","unformattedProjects","projects","setProjects","project","href","Contact","PageRouter","HashRouter","Routes","Route","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fab1a7a5.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Link } from 'react-router-dom';\nimport './LayoutFooter.css';\n\nexport default function LayoutFooter() {\n    return (\n        <div>\n            <div className='footer-spacer'/>\n            <div className='footer'>\n                <p><i>Sam Foucart - 2022</i></p>\n                <Link to='/'>Back to Home</Link>\n            </div>\n        </div>\n    );\n}","import { Link } from \"react-router-dom\";\nimport './LayoutHeader.css';\n\nexport default function LayoutHeader() {\n    return (\n        <div>\n            <nav className=\"top-nav\">\n                <Link to={\"/\"}>Home</Link>\n                <Link to={\"/posts\"}>Blog</Link>\n                <Link to={\"/projects\"}>Projects</Link>\n                <Link to={\"/contact\"}>Contact/About</Link>\n            </nav>\n            <div className=\"top-nav-spacer\"/>\n        </div>\n    );\n}","import LayoutFooter from \"./LayoutFooter\";\nimport LayoutHeader from \"./LayoutHeader\";\nimport './Layout.css';\n\ninterface AppProps {\n    children?: JSX.Element;\n};\n\nexport default function Layout({ children }: AppProps): JSX.Element {\n    return (\n        <div className=\"layout\">\n            <LayoutHeader/>\n            {children}\n            <LayoutFooter/>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/Layout';\nimport { Outlet } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport './Home.css';\n\nexport default function Home() {\n    return (\n        <div>\n            <div className=\"home-container\">\n                <div className=\"home-headshot\">\n                    <img src={process.env.PUBLIC_URL + '/images/home/circle-headshot.png'} alt={'circle-headshot'} width=\"256\" height=\"256\"/>\n                </div>\n                <div className=\"home-textfields\">\n                    <h1>Hello!</h1>\n                    <p>I am Sam Foucart, a computer engineer from southeast Ohio. I am currently working at NICE CXone on the CXone recording platform.</p>\n                    <p>This website is a home for my engineering blog and side projects. It was originally made to learn React, but I have been adding more too it as time goes on.\n                        Although I'm not formally a frontend developer, this still shows a demonstration of my work.\n                    </p>\n                </div>\n            </div>\n            <img src={process.env.PUBLIC_URL + '/images/home/mesaltshed.jpeg'} style={{objectFit: 'scale-down', flexShrink: 1, width: '100%', height: '100%'}}/>\n            <img src={process.env.PUBLIC_URL + '/images/home/meandclaire.jpeg'} style={{objectFit: 'scale-down', flexShrink: 1, width: '100%', height: '100%'}}/>\n            <img src={process.env.PUBLIC_URL + '/images/home/databendpicture.JPG'} style={{objectFit: 'scale-down', flexShrink: 1, width: '100%', height: '100%'}}/>\n            <img src={process.env.PUBLIC_URL + '/images/home/treepicture.jpeg'} style={{objectFit: 'scale-down', flexShrink: 1, width: '100%', height: '100%'}}/>\n            <img src={process.env.PUBLIC_URL + '/images/home/foggypicture.jpeg'} style={{objectFit: 'scale-down', flexShrink: 1, width: '100%', height: '100%'}}/>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { marked } from 'marked';\nimport DOMPurify from 'dompurify';\nimport './BlogPost.css';\nimport hljs from \"highlight.js\";\n\ninterface BlogPostState {\n    loading: boolean;\n    failed: boolean;\n    post: string;\n}\n\nexport default function BlogPost() {\n    const [blogPost, setBlogPost] = useState<BlogPostState>({loading: true, failed: false, post: \"\"});\n    const params = useParams();\n\n    useEffect(() => {\n        marked.setOptions({\n            highlight: (code, lang) => {\n                const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n                return hljs.highlight(code, { language }).value;\n            },\n            langPrefix: 'hljs language-',\n        });\n        const postResponse = fetch(process.env.PUBLIC_URL + `/posts-raw/${params.postId}.md`);\n        // const postResponse = fetch(`/posts-raw/${params.postId}.md`);\n        postResponse.then((response) => {\n            return response.text();\n        })\n        .then((data) => {\n            const sanitizedPostHtml: string = DOMPurify.sanitize(marked.parse(data));\n            setBlogPost({loading: false, failed: false, post: sanitizedPostHtml});\n        })\n        .catch((error) => {\n            console.log(error);\n            setBlogPost({loading: false, failed: true, post: \"\"});\n        });\n    }, [params]);\n\n    function loading() {\n        if (blogPost.loading === true) {\n            return (\n                <div>\n                    <p>Loading</p>\n                </div>\n            );\n        }\n\n        if (blogPost.loading === false && blogPost.failed === true) {\n            return (\n                <div>\n                    <p>Failed to load {params.postId}</p>\n                </div>\n            );\n        } else {\n            return (\n                <div \n                dangerouslySetInnerHTML={{ __html: blogPost.post}}\n                style={{overflowWrap: 'break-word'}}/>\n            );\n        }\n    }\n\n    return (\n        <div className=\"post-container\">\n            {loading()}\n        </div>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport './BlogPosts.css';\n\ninterface IBlogPostMetadata {\n    id: number,\n    title: string,\n    date_created: string,\n    date_last_updated: string,\n    author: string,\n    fileName: string,\n}\n\nexport default function BlogPosts() {\n    const [blogPosts, setBlogPosts] = useState<IBlogPostMetadata[] | null>(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const blogPostListResponse = fetch(process.env.PUBLIC_URL + '/posts-raw/posts.json');\n        // const blogPostListResponse = fetch('/posts-raw/posts.json');\n        blogPostListResponse.then((response: Response) => {\n            return response.json();\n        })\n        .then((data: IBlogPostMetadata[]) => {\n            const newBlogPosts: IBlogPostMetadata[] = data.map((blogPost): IBlogPostMetadata => {\n                return blogPost;\n            });\n            setBlogPosts(newBlogPosts);\n        });\n\n        return (() => {\n            setBlogPosts(null);\n        });\n\n    }, [location]);\n\n    function formatBlogPosts(unformattedPosts: IBlogPostMetadata[] | null) {\n        if (unformattedPosts == null) {\n            return (\n                <div className=\"post-list-container\"><p>Loading...</p></div>\n            );\n        } else {\n            return (\n                <div>\n                    <div className=\"post-list-container\">\n                        <div className=\"individual-post-metadata\">\n                            {unformattedPosts.map((post: IBlogPostMetadata) => {\n                                return (\n                                    <Link to={`/posts/${post.id}`} key={post.id}>\n                                        <h2>{post.title}</h2>\n                                        <div className=\"individual-post-metadata-inline\">\n                                            <p>Author: <i>{post.author}</i></p>\n                                            <p>Date Created: <i>{post.date_created}</i></p>\n                                            <p>Date Last Updated: <i>{post.date_last_updated}</i></p>\n                                        </div>\n                                    </Link>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n                \n            )\n            \n        }\n\n    }\n\n    return (\n        <div>\n            {formatBlogPosts(blogPosts)}\n            {/* <ul>\n                {blogPosts != null ? blogPosts.map((blogPost: IBlogPostMetadata) => {\n                    return <li key={blogPost.id}><Link to={`/posts/${blogPost.id}`} key={blogPost.id}>{blogPost.title}</Link></li>\n                }) : <li>loading</li>}\n            </ul> */}\n            {/* <Outlet/> */}\n        </div>\n    );\n}","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport './Projects.css'\n\nconst projectDatabase: IProjectHeader[] = [{\n        title: 'Fourier Heat Equation Interactive WebGL Demonstration',\n        description: 'A lit, shaded mesh that over time approaches a steady state temperature. This was my first project made in WebGL and was completed as the final project of CS4250 of Ohio University.',\n        image: '/images/projects/mesh_thumb.png',\n        url: 'fourier_heat_equation_interactive_webgl_demonstation',\n        outside_url: 'https://samfoucart.github.io/Fourier-Series-Visualization/index.html',\n        id: 1\n    },\n    {\n        title: 'Micromouse Maze Solving Demonstration',\n        description: 'A randomly generated maze and a controllable mouse that is able to solve the maze. This project was made during my sophomore year at Ohio University as part of IEEE.',\n        image: '/images/projects/micromouse_thumb.png',\n        url: 'micromouse_maze_solving_demonstration',\n        outside_url: 'https://samfoucart.github.io/Ohio-University-Micromouse/simulator/index.html',\n        id: 2\n    },\n    {\n        title: 'Electromagnetic Spectral Data Collector/Viewer',\n        description: 'An Android application that is able to collect, plot, and save data from an Ocean Optics USB2000 spectrometer. This project was made as part of the PACE program at Ohio University.',\n        image: '/images/projects/zoomed-spectra.png',\n        url: 'electromagnetic_spectral_data_collector',\n        outside_url: 'https://github.com/samfoucart/oueecs_SpectralDataViewer',\n        id: 3\n    }\n]\n\nexport default function Projects() {\n    const [projects, setProjects] = useState<IProjectHeader[] | null>(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        // potentially fetch this in the future\n        setProjects(projectDatabase);\n\n        return (() => {\n            setProjects(null);\n        });\n\n    }, [location]);\n\n    function formatProjects(unformattedProjects: IProjectHeader[] | null) {\n        if (unformattedProjects == null) {\n            return (\n                <div className=\"project-list-container\"><p>Loading...</p></div>\n            );\n        } else {\n            return (\n                <div className=\"project-list-container\">\n                    <div className=\"project-metadata\">\n                        {unformattedProjects.map((project: IProjectHeader) => {\n                            return (\n                                <a href={project.outside_url? `${project.outside_url}` : `${process.env.PUBLIC_URL}/projects/${project.url}`} key={project.id}>\n                                    <div className=\"project-outline\">\n                                        <img src={process.env.PUBLIC_URL + project.image} alt={project.title} width=\"128\" height=\"128\"/>\n                                        <div className=\"project-text\">\n                                            <h2>{project.title}</h2>\n                                            <p>{project.description}</p>\n                                        </div>\n                                    </div>\n                                </a>\n                            );\n                        })}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    return (\n        <div>\n            {formatProjects(projects)}\n        </div>\n    );\n}\n\ninterface IProjectHeader {\n    title: string,\n    description: string,\n    image: string,\n    url: string,\n    id: number,\n    outside_url?: string,\n}","import './Contact.css';\n\nexport default function Contact() {\n    return (\n        <div>\n            <div className=\"contact-container\">\n                <h1>You can reach me at:</h1>\n                <div className=\"contact-row\">\n                    <a>samfoucart25@gmail.com</a>\n                    <a>linkedin.com/in/samfoucart</a>\n                    <a>github.com/samfoucart</a>\n                </div>\n                <div className='contact-row'>\n                    <p>Phone: (740) 785-8278</p>\n                </div>\n                <h2>Work Experience</h2>\n                <div className='contact-work-experience-row'>\n                    <h3>NICE CXone</h3>\n                    <p>Software Engineer</p>\n                    <p>August 2021 - Current</p>\n                </div>\n            </div>\n        </div>\n    )\n}","import { HashRouter, Route, Routes } from \"react-router-dom\";\nimport App from \"../App\";\nimport Home from \"../pages/Home\";\nimport BlogPost from \"../pages/BlogPost/BlogPost\";\nimport BlogPosts from \"../pages/BlogPost/BlogPosts\";\nimport Projects from \"../pages/Projects/Projects\";\nimport Contact from \"../pages/Contact\";\n\nexport default function PageRouter() {\n    return (\n        <div>\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/\" element={<App />}>\n                        <Route index element={<Home />} />\n                        <Route path=\"posts\" element={<BlogPosts />} />\n                        <Route path=\"posts/:postId\" element={<BlogPost />} />\n                        <Route path=\"projects\" element={<Projects />} />\n                        <Route path=\"contact\" element={<Contact />} />\n                    </Route>\n                </Routes>\n            </HashRouter>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport PageRouter from './components/PageRouter';\n\nReactDOM.render(\n  <PageRouter/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}